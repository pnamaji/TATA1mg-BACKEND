"""
Django settings for BACKEND project.

Generated by 'django-admin startproject' using Django 4.2.16.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
from decouple import config, Csv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY', default='django-insecure-ta317qbk)&f7@ei@!tak+gpx@d1sv%kprgk#n+pp7^9&6i3#2f')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', default=True, cast=bool)

ALLOWED_HOSTS = config('ALLOWED_HOSTS', cast=Csv())
print(ALLOWED_HOSTS)
TWILIO_ACCOUNT_SID = config('TWILIO_ACCOUNT_SID')
TWILIO_AUTH_TOKEN = config('TWILIO_AUTH_TOKEN')
TWILIO_PHONE_NO = config('TWILIO_PHONE_NO')


# Application definition

INSTALLED_APPS = [
    'channels',
    'jazzmin',
    'rest_framework',
    'rest_framework_simplejwt',
    'rest_framework_simplejwt.token_blacklist',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'Account',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'BACKEND.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'BACKEND.wsgi.application'

# AUTH_USER_MODEL = 'Account.UserData'

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-in'  # or 'en-us' if preferred

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

CORS_ALLOW_ALL_ORIGINS = True

# Email settings
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = config('EMAIL_HOST', default='smtp.gmail.com')
EMAIL_PORT = config('EMAIL_PORT', default=587, cast=int)
EMAIL_USE_TLS = config('EMAIL_USE_TLS', default=True, cast=bool)
EMAIL_HOST_USER = config('EMAIL_HOST_USER', default='pnamaji7@gmail.com')
EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD', default='lfuu swba ekyf ymcc')
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

CSRF_COOKIE_SECURE = False  # Use this in production
CSRF_COOKIE_HTTPONLY = False  # Use this in production

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
#     'DEFAULT_PERMISSION_CLASSES': [
#         'rest_framework.permissions.IsAuthenticated',
#     ],
}

JAZZMIN_SETTINGS = {
    "site_title": "My Admin",
    "site_header": "TATA 1mg Admin",
    "site_logo": "path/to/logo.png",  # Add path to your custom logo
    "welcome_sign": "Welcome to the TATA 1mg Admin",
    "copyright": "TATA 1mg",
    "show_sidebar": True,
    "navigation_expanded": True,
    # You can add many other options here to customize the look and feel
    
    "custom_links": {
        "Account": [  # replace 'app_name' with your actual app name
            {
                "name": "Users",
                "icon": "fas fa-user",
                "url": "/admin/auth/user/",  # Directs to the users in admin
                "model": "auth.user",
                "permissions": ["auth.view_user"],
            },
            {
                "name": "Posts",
                "icon": "fas fa-book",
                "url": "/admin/app_name/post/",  # Directs to the posts model in admin
                "model": "app_name.post",
                "permissions": ["Account.view_post"],
            },
        ],
    },

    "statistics": [
        {
            "model": "auth.User",
            "icon": "fas fa-user",
            "label": "Total Users",
            "description": "Total registered users",
            "queryset_filters": {},  # You can add filters here if needed
        },
        {
            "model": "auth.User",
            "icon": "fas fa-user",
            "label": "Active Users",
            "description": "Total active users",
            "queryset_filters": {"is_active": True},  # Show only active users
        }
    ],
}

from datetime import timedelta

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=200),   # Set token expiry time for access token
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),     # Set token expiry time for refresh token
    'ROTATE_REFRESH_TOKENS': True,                   # Automatically rotate refresh tokens
    'BLACKLIST_AFTER_ROTATION': True,                # Blacklist the old refresh token
    'ALGORITHM': 'HS256',
    'SIGNING_KEY': SECRET_KEY,                       # Your Django SECRET_KEY is used here
    'AUTH_HEADER_TYPES': ('Bearer',),                # Authorization Header starts with Bearer
}

# Optionally configure channels layers for WebSockets
CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels.layers.InMemoryChannelLayer",  # Use Redis for production
    },
}